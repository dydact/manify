name: Test & Format

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:  
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false    # don’t stop the matrix if one Python version fails
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"] # jaxtyping requires >= 3.10

    steps:
      # Setup and installation
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -e ".[dev]"

      - name: Smoke‑test pip install manify
        run: |
          python - <<EOF
          import manify
          print("manify version:", getattr(manify, "__version__", "unknown"))
          EOF

      # Code quality checks
      - name: Check code formatting with Black
        run: black --check manify/

      - name: Check import ordering with isort
        run: isort --check-only manify/

      - name: Run pylint
        run: pylint manify/

      # Type checking
      - name: Check type annotations with MyPy
        run: mypy manify/

      # Unit testing
      - name: Run unit tests & collect coverage
        run: BEARTYPE_ENABLE=true pytest tests --cov --cov-report=xml

      # Check docstrings are in Google style      
      - name: Check docstrings are in Google style
        run: pydocstyle manify/
        continue-on-error: true

      # Code coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
          flags: unittests
